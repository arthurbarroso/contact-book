{"version":3,"sources":["contacts/core.cljs"],"mappings":";;AAYA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAA,AAAA;AACE,AAAAO,AAAwB,AAAA,AAACI;AAAzB,AAAAH,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAAaG;AAAb,AAkJQ,AAAAgB,AAAA,AAAAC,AAAA;AA/IL,AAAA,AAAA,AAAA,AAACf,AACW,AAAKC,AA8IZ;AA9IO,AACE,AAACH,AAAAA,AAAAA,AAAUG,AAAAA;;;AAyHU,AAoB9Be;AAAA,AAAA,AAAAC,AAAAA,AAAAH,AAAAE,AAAAC,AAAAH,AAAAE;;AA5IJ,AAAInB;AAEAK,AAkBH,AAAA,AAAAO,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAD,AAAAI,AAAA,AAAA,AAAA,AAAAJ,AAAA;AARN,AAAAC;AAhBUP,AAAwBN,AAgBlC,AAAA,AAAAY,AAAA,AAAAE,AAAA,AAAA;AAAA,AAAAA;AAfUP,AAAuB,AAACC,AAAMR,AAexC,AAAA,AAAAY,AAAA,AAAAG,AAAA,AAAA;AAAA,AAAAA;;;AAQM,AAAA,AAAAH,AAAA,AAAA,AAAA;;;AAnCb,AAAA,AAAA,AAAAlB;AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ,AAgBP,AAAA,AAAgCY;AAAhC,AACE,AAACC,AAAcb,AAAK,AAAA,AAACc,AAkBV,AAAA,AAAAC,AAAA","names":["G__29796","props__26572__auto__","maybe-ref__26573__auto__","vec__29797","helix.core/extract-cljs-props","goog/DEBUG","G__29811","goog.object/set","contacts.core/app","vec__29800","cljs.core.nth","state","set-state","helix.hooks/use-state","ajax.core.GET","response","contacts.components.nav/nav","contacts.components.contact-list/contact-list","contacts.components.contact-form/contact-form","cljs.core/first","contacts.core/init","js/module$node_modules$react_dom$index.render","js/document.getElementById","helix.core/get-react","obj29806","obj29808","obj29810","helix.core/Fragment","G__29803","helix.hooks/wrap-fx","G__29804","helix.hooks/raw-use-effect"],"sourcesContent":["(ns contacts.core\n  (:require\n   [ajax.core :refer [GET]]\n   [helix.core :refer [defnc $ <>]]\n   [helix.hooks :as hooks]\n   [helix.dom :as d]\n   [\"react-dom\" :as dom]\n   [contacts.components.nav :refer [nav]]\n   [contacts.components.contact-list :refer [contact-list]]\n   [contacts.components.contact-form :refer [contact-form]]))\n\n\n(defnc app []\n  (let [[state set-state] (hooks/use-state nil)]\n    (hooks/use-effect\n     :once\n     (GET \"http://localhost:4000/api/contacts\"\n       {:handler (fn [response]\n                   (set-state response))}))\n      (if state\n        (<>\n       ($ nav)\n       (d/div {:class '[container pt-4]}\n              ($ contact-list {:contacts state})\n              ($ contact-form {:contact (first state)})))\n        \n        (d/p \"Loading...\"))))\n\n(defn ^:export ^:dev/after-load init []\n  (dom/render ($ app) (js/document.getElementById \"app\")))\n"]}